name: CI - Post Tweets (Windows)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  post-on-windows:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Upgrade pip and install Python deps
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) {
            python -m pip install -r requirements.txt
          } else {
            Write-Host "requirements.txt not found — installing playwright only"
            python -m pip install playwright
          }

      - name: Restore storage_state.json (optional)
        shell: pwsh
        env:
          STORAGE_STATE_B64: ${{ secrets.STORAGE_STATE_B64 }}
        run: |
          if ($env:STORAGE_STATE_B64 -and $env:STORAGE_STATE_B64.Trim() -ne '') {
            [System.IO.File]::WriteAllBytes('storage_state.json', [System.Convert]::FromBase64String($env:STORAGE_STATE_B64))
            Write-Host "storage_state.json restored from secret."
          } else {
            Write-Host "No STORAGE_STATE_B64 secret found — continuing without restored session."
          }

      - name: Install Playwright browsers (Chromium)
        run: python -m playwright install chromium

      - name: Run poster (dry-run by default)
        shell: pwsh
        env:
          PYTHONIOENCODING: utf-8
        run: |
          if (Test-Path post_tweets.py) {
            Write-Host "Running post_tweets.py in dry-run mode..."
            python post_tweets.py --dry-run
          } else {
            Write-Host "post_tweets.py not found."
            exit 1
          }

      - name: Upload debug outputs (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-outputs
          path: |
            debug_outputs/**
            post_history.json
            runner_state.json
